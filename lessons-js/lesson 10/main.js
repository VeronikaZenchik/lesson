const MOCK_TASKS = [
  { id: 1, title: '–ò–∑—É—á–∏—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω MVC', isDone: false },   // –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  { id: 2, title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ', isDone: true },
]

// —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
const model = {
  tasks: [],
  addTask(title) {
    // const isDone = false
    // const id = Math.random()

    const newTask = { title: title, isDone: false, id: Math.random() }
    // —Ç–æ –∂–µ, —á—Ç–æ { title: title, isDone: isDone, id: id }

    this.tasks.push(newTask)

    view.renderTasks(model.tasks) // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
  },

  deleteTask(taskId) {
    this.tasks = this.tasks.filter((task) => task.id !== taskId)

    view.renderTasks(model.tasks)
  },

  toggleTask(taskId) {
    // –≤–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è –º–µ—Ç–æ–¥–æ–º map
    this.tasks = this.tasks.map((task) => {
      if (task.id === taskId) {
        task.isDone = !task.isDone
      }
      return task
    })

    view.renderTasks(model.tasks) // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
  },
  clearTasks(){
    this.tasks = this.tasks.filter((task) => task.isDone !== true)

    view.renderTasks(model.tasks)
  },
}

// –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: —Ä–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á, —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
const view = {
  init(){ // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
    // 1 –≤–∞—Ä–∏–∞–Ω—Ç –∫–∞–∫ –º–æ–∂–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è
    // const tasks = controller.getTasks()
    // this.renderTasks(tasks)
    // 2 –≤–∞—Ä–∏–∞–Ω—Ç –∫–∞–∫ –º–æ–∂–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è
    this.renderTasks(model.tasks) 

    const form = document.querySelector('.form')
    const input = document.querySelector('.input')

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Ñ–æ—Ä–º—É
    form.addEventListener('submit', function (event) {
      event.preventDefault() // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
      const title = input.value
      controller.addTask(title) // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ addTask –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
  
      input.value = '' // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ // `value` ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–∞ `input`, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —ç—Ç–æ –ø–æ–ª–µ.
    })

    const list = document.querySelector('.list')

    list.addEventListener('click', function (event) {
      // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
      if (event.target.classList.contains('task-title')) {
        // id –∑–∞–¥–∞—á–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ id —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        // +, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –≤ number
        const taskId = +event.target.parentElement.id
        controller.toggleTask(taskId)
      }

     // 1. –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è
    if (event.target.classList.contains('delete-button')) {
      const taskId = +event.target.parentElement.id
      // 2. –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
      controller.deleteTask(taskId)
    }
  })
  const clearButton = document.querySelector('.clear')
  clearButton.addEventListener('click', function (event) {
    controller.clearTasks()
  })
},

  renderTasks(tasks){
    const list = document.querySelector('.list') // –∏—â–µ–º –Ω–∞—à—É —É–ª
    let tasksHTML = '' 
    for (let i = 0; i < tasks.length; i++) { // –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É
      const task = tasks[i]
      tasksHTML = tasksHTML + `
        <li id="${task.id}" class="${task.isDone ? 'done' : ''}">
          <b class="task-title">${task.title}</b>
          <button class="delete-button" type="button">–£–¥–∞–ª–∏—Ç—å üóë</button>
        </li>
      `
      list.innerHTML = tasksHTML
    }
  }
}

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
const controller = {
  // getTasks(){
  //   return model.tasks
  // },
  addTask(title){
 // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
  if (title.trim() !== '') {
  model.addTask(title)
}
  },

  deleteTask(taskId) {
    model.deleteTask(taskId)
  },

  toggleTask(taskId) {
    model.toggleTask(taskId)
  },
  clearTasks(){
    model.clearTasks()
  },
}


function viewDefault() {
  view.init()
}
viewDefault()